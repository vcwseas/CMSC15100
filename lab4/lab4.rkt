#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 64 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
43 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
45 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 65 105 225 0 0 0
-1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1           0 2852 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 182
(
 #"#reader(lib \"htdp-intermediate-lambda-reader.ss\" \"lang\")((modnam"
 #"e lab4) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t"
 #" constructor repeating-decimal #f #t none #f ())))"
) 0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 14 3 14 #"2htdp/batch-io"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 45 #";; Victor Cheung 438907 CMSC 15100 John Reppy"
0 0 23 29 1 #"\n"
0 0 17 3 54 #";; Lab4 is located at the bottom of the file. Sorry :("
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 78
(
 #";;-------------------------------Prerequisites----------------------"
 #"----------"
) 0 0 23 29 1 #"\n"
0 0 17 3 37 #";; dataset refers to a list of posns."
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 64
#";; (make-analysis lineq num) creates an analysis structure where"
0 0 23 29 1 #"\n"
0 0 17 3 49 #";; - lineq is the equation of a linear regression"
0 0 23 29 1 #"\n"
0 0 17 3 28 #";; - num is the value of r^2"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 8 #"analysis"
0 0 23 3 2 #" ("
0 0 14 3 5 #"lineq"
0 0 23 3 1 #" "
0 0 14 3 2 #"r2"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 35 #";; full-linreg: dataset -> analysis"
0 0 23 29 1 #"\n"
0 0 17 3 45 #";; computes a full linear regression analysis"
0 0 23 29 1 #"\n"
0 0 17 3 54 #";; and creates a strucutre analysis with lineq and r^2"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 7 #"lineq-m"
0 0 23 3 2 #" ("
0 0 14 3 14 #"analysis-lineq"
0 0 23 3 2 #" ("
0 0 14 3 11 #"full-linreg"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-dset1"
0 0 23 3 4 #"))) "
0 0 20 3 7 #"1.23333"
0 0 23 3 1 #" "
0 0 20 3 6 #"0.0001"
0 0 23 3 2 #" )"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 7 #"lineq-b"
0 0 23 3 2 #" ("
0 0 14 3 14 #"analysis-lineq"
0 0 23 3 2 #" ("
0 0 14 3 11 #"full-linreg"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-dset1"
0 0 23 3 4 #"))) "
0 0 20 3 5 #"-0.65"
0 0 23 3 1 #" "
0 0 20 3 6 #"0.0001"
0 0 23 3 2 #" )"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 7 #"lineq-m"
0 0 23 3 2 #" ("
0 0 14 3 14 #"analysis-lineq"
0 0 23 3 2 #" ("
0 0 14 3 11 #"full-linreg"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-dset2"
0 0 23 3 4 #"))) "
0 0 20 3 1 #"7"
0 0 23 3 1 #" "
0 0 20 3 6 #"0.0001"
0 0 23 3 2 #" )"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 7 #"lineq-b"
0 0 23 3 2 #" ("
0 0 14 3 14 #"analysis-lineq"
0 0 23 3 2 #" ("
0 0 14 3 11 #"full-linreg"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-dset2"
0 0 23 3 4 #"))) "
0 0 20 3 8 #"-9.33333"
0 0 23 3 1 #" "
0 0 20 3 6 #"0.0001"
0 0 23 3 2 #" )"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 11 #"analysis-r2"
0 0 23 3 2 #" ("
0 0 14 3 11 #"full-linreg"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-dset1"
0 0 23 3 3 #")) "
0 0 20 3 8 #"0.936056"
0 0 23 3 1 #" "
0 0 20 3 6 #"0.0001"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 11 #"analysis-r2"
0 0 23 3 2 #" ("
0 0 14 3 11 #"full-linreg"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-dset2"
0 0 23 3 3 #")) "
0 0 20 3 8 #"0.958245"
0 0 23 3 1 #" "
0 0 20 3 6 #"0.0001"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 23 3 2 #" ("
0 0 14 3 11 #"full-linreg"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 4 #"()))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 11 #"full-linreg"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 3 #"lst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 13 #"make-analysis"
0 0 23 3 2 #" ("
0 0 14 3 6 #"linreg"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 3 #") ("
0 0 14 3 5 #"corr2"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";; corr2: dataset -> num"
0 0 23 29 1 #"\n"
0 0 17 3 25 #";; computes the r^2 value"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 5 #"corr2"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-dset1"
0 0 23 3 2 #") "
0 0 20 3 8 #"0.936056"
0 0 23 3 1 #" "
0 0 20 3 6 #"0.0001"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 5 #"corr2"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-dset2"
0 0 23 3 2 #") "
0 0 20 3 8 #"0.958245"
0 0 23 3 1 #" "
0 0 20 3 6 #"0.0001"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"corr2"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 3 #"lst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 3 #"sqr"
0 0 23 3 2 #" ("
0 0 14 3 4 #"corr"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";; corr: dataset -> num"
0 0 23 29 1 #"\n"
0 0 17 3 45 #";; finds the linear correlation coefficient r"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 4 #"corr"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-dset1"
0 0 23 3 2 #") "
0 0 20 3 8 #"0.967506"
0 0 23 3 1 #" "
0 0 20 3 6 #"0.0001"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 4 #"corr"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-dset2"
0 0 23 3 2 #") "
0 0 20 3 6 #"0.9789"
0 0 23 3 1 #" "
0 0 20 3 6 #"0.0001"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"corr"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 3 #"lst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 1 #"/"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 7 #"average"
0 0 23 3 2 #" ("
0 0 14 3 20 #"list-of-posn-product"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 4 #")) ("
0 0 14 3 1 #"*"
0 0 23 3 2 #" ("
0 0 14 3 7 #"average"
0 0 23 3 2 #" ("
0 0 14 3 14 #"list-of-posn-x"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 51 #"                                                  ("
0 0 14 3 7 #"average"
0 0 23 3 2 #" ("
0 0 14 3 14 #"list-of-posn-y"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 1 #"*"
0 0 23 3 2 #" ("
0 0 14 3 5 #"stdev"
0 0 23 3 2 #" ("
0 0 14 3 14 #"list-of-posn-x"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 4 #")) ("
0 0 14 3 5 #"stdev"
0 0 23 3 2 #" ("
0 0 14 3 14 #"list-of-posn-y"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 31 #";; average: (listof num) -> num"
0 0 23 29 1 #"\n"
0 0 17 3 49 #";; finds the arithmetic mean of a list of numbers"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"average"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 3 #")) "
0 0 20 3 1 #"2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"average"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 3 #")) "
0 0 20 3 2 #"10"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 7 #"average"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 23 3 1 #"("
0 0 14 3 3 #"lst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 1 #"/"
0 0 23 3 2 #" ("
0 0 14 3 3 #"sum"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 3 #") ("
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 29 #";; stdev: (listof num) -> num"
0 0 23 29 1 #"\n"
0 0 17 3 52 #";; finds the standard deviation of a list of numbers"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 5 #"stdev"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 3 #")) "
0 0 20 3 7 #"1.41421"
0 0 23 3 1 #" "
0 0 20 3 7 #"0.00001"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 5 #"stdev"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 20 3 2 #"12"
0 0 23 3 1 #" "
0 0 20 3 2 #"32"
0 0 23 3 1 #" "
0 0 20 3 2 #"43"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 2 #"21"
0 0 23 3 3 #")) "
0 0 20 3 8 #"13.63231"
0 0 23 3 1 #" "
0 0 20 3 7 #"0.00001"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"stdev"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 3 #"lst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 4 #"sqrt"
0 0 23 3 2 #" ("
0 0 14 3 8 #"variance"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 32 #";; variance: (listof num) -> num"
0 0 23 29 1 #"\n"
0 0 17 3 42 #";; finds the variance of a list of numbers"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"variance"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 3 #")) "
0 0 20 3 1 #"2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 8 #"variance"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 20 3 2 #"12"
0 0 23 3 1 #" "
0 0 20 3 2 #"32"
0 0 23 3 1 #" "
0 0 20 3 2 #"43"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 2 #"21"
0 0 23 3 3 #")) "
0 0 20 3 6 #"185.84"
0 0 23 3 1 #" "
0 0 20 3 7 #"0.00001"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 8 #"variance"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 3 #"lst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 1 #"/"
0 0 23 3 2 #" ("
0 0 14 3 3 #"sum"
0 0 23 3 2 #" ("
0 0 14 3 8 #"list-sqr"
0 0 23 3 2 #" ("
0 0 14 3 20 #"list-of-diff-of-mean"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 53 #";; list-of-diff-of-mean: (listof num) -> (listof num)"
0 0 23 29 1 #"\n"
0 0 17 3 53 #";; builds a list of differences between the elements "
0 0 23 29 1 #"\n"
0 0 17 3 41 #";; of that list and the mean of the list."
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 20 #"list-of-diff-of-mean"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 3 #")) "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 20 3 2 #"-1"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 20 #"list-of-diff-of-mean"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 3 #")) "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 20 #"list-of-diff-of-mean"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 2 #"-1"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #")) "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 20 3 2 #"-1"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 20 #"list-of-diff-of-mean"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 3 #"lst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 15 3 5 #"local"
0 0 23 3 3 #" (("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"mean"
0 0 23 3 2 #" ("
0 0 14 3 7 #"average"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 3 #"map"
0 0 23 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 23 3 2 #" ("
0 0 14 3 1 #"n"
0 0 23 3 3 #") ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 1 #" "
0 0 14 3 4 #"mean"
0 0 23 3 3 #")) "
0 0 14 3 3 #"lst"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 65
#";;--------------------------Lab3---------------------------------"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-dset1"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 1 #"7"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-dset2"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 20 3 2 #"16"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 2 #"25"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"6"
0 0 23 3 1 #" "
0 0 20 3 2 #"36"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                            "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 62
#";; (make-lineq m b) creates a linear regression equation where"
0 0 23 29 1 #"\n"
0 0 17 3 25 #";; - m refer to the slope"
0 0 23 29 1 #"\n"
0 0 17 3 32 #";; - b refers to the y intercept"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 5 #"lineq"
0 0 23 3 2 #" ("
0 0 14 3 1 #"m"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 27 #";; linreg: dataset -> lineq"
0 0 23 29 1 #"\n"
0 0 17 3 59
#";; calculates a linear regression equation for some dataset"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 7 #"lineq-m"
0 0 23 3 2 #" ("
0 0 14 3 6 #"linreg"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-dset1"
0 0 23 3 3 #")) "
0 0 20 3 7 #"1.23333"
0 0 23 3 1 #" "
0 0 20 3 6 #"0.0001"
0 0 23 3 2 #" )"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 7 #"lineq-b"
0 0 23 3 2 #" ("
0 0 14 3 6 #"linreg"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-dset1"
0 0 23 3 3 #")) "
0 0 20 3 5 #"-0.65"
0 0 23 3 1 #" "
0 0 20 3 6 #"0.0001"
0 0 23 3 2 #" )"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 7 #"lineq-m"
0 0 23 3 2 #" ("
0 0 14 3 6 #"linreg"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-dset2"
0 0 23 3 3 #")) "
0 0 20 3 1 #"7"
0 0 23 3 1 #" "
0 0 20 3 6 #"0.0001"
0 0 23 3 2 #" )"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 7 #"lineq-b"
0 0 23 3 2 #" ("
0 0 14 3 6 #"linreg"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-dset2"
0 0 23 3 3 #")) "
0 0 20 3 8 #"-9.33333"
0 0 23 3 1 #" "
0 0 20 3 6 #"0.0001"
0 0 23 3 2 #" )"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 23 3 2 #" ("
0 0 14 3 6 #"linreg"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 6 #"linreg"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 4 #"dset"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 1 #"<"
0 0 23 3 2 #" ("
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 2 #") "
0 0 20 3 1 #"2"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 5 #"error"
0 0 23 3 1 #" "
0 0 19 3 56
#"\"linear regression meaningless on fewer than two points\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 10 #"make-lineq"
0 0 23 3 2 #" ("
0 0 14 3 5 #"slope"
0 0 23 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 3 #") ("
0 0 14 3 9 #"intercept"
0 0 23 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 28 #";; intercept: dataset -> num"
0 0 23 29 1 #"\n"
0 0 17 3 73
(
 #";; finds the y intercept of a linear regression equation for some da"
 #"taset"
) 0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 9 #"intercept"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-dset1"
0 0 23 3 2 #") "
0 0 20 3 5 #"-0.65"
0 0 23 3 1 #" "
0 0 20 3 6 #"0.0001"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 9 #"intercept"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-dset2"
0 0 23 3 2 #") "
0 0 20 3 8 #"-9.33333"
0 0 23 3 1 #" "
0 0 20 3 6 #"0.0001"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 9 #"intercept"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 4 #"dset"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 1 #"/"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 1 #"*"
0 0 23 3 2 #" ("
0 0 14 3 3 #"sum"
0 0 23 3 2 #" ("
0 0 14 3 14 #"list-of-posn-y"
0 0 23 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 4 #")) ("
0 0 14 3 3 #"sum"
0 0 23 3 2 #" ("
0 0 14 3 8 #"list-sqr"
0 0 23 3 2 #" ("
0 0 14 3 14 #"list-of-posn-x"
0 0 23 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 1 #"*"
0 0 23 3 2 #" ("
0 0 14 3 3 #"sum"
0 0 23 3 2 #" ("
0 0 14 3 14 #"list-of-posn-x"
0 0 23 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 4 #")) ("
0 0 14 3 3 #"sum"
0 0 23 3 2 #" ("
0 0 14 3 20 #"list-of-posn-product"
0 0 23 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 1 #"*"
0 0 23 3 2 #" ("
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 3 #") ("
0 0 14 3 3 #"sum"
0 0 23 3 2 #" ("
0 0 14 3 8 #"list-sqr"
0 0 23 3 2 #" ("
0 0 14 3 14 #"list-of-posn-x"
0 0 23 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 4 #"expt"
0 0 23 3 2 #" ("
0 0 14 3 3 #"sum"
0 0 23 3 2 #" ("
0 0 14 3 14 #"list-of-posn-x"
0 0 23 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 3 #")) "
0 0 20 3 1 #"2"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";; slope: dataset -> num"
0 0 23 29 1 #"\n"
0 0 17 3 67
#";; finds the slope of a linear regression equation for some dataset"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 5 #"slope"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-dset1"
0 0 23 3 2 #") "
0 0 20 3 7 #"1.23333"
0 0 23 3 1 #" "
0 0 20 3 7 #"0.00001"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 5 #"slope"
0 0 23 3 1 #" "
0 0 14 3 12 #"sample-dset2"
0 0 23 3 2 #") "
0 0 20 3 1 #"7"
0 0 23 3 1 #" "
0 0 20 3 7 #"0.00001"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"slope"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 4 #"dset"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 1 #"/"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 1 #"*"
0 0 23 3 2 #" ("
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 3 #") ("
0 0 14 3 3 #"sum"
0 0 23 3 2 #" ("
0 0 14 3 20 #"list-of-posn-product"
0 0 23 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 1 #"*"
0 0 23 3 2 #" ("
0 0 14 3 3 #"sum"
0 0 23 3 2 #" ("
0 0 14 3 14 #"list-of-posn-x"
0 0 23 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 4 #")) ("
0 0 14 3 3 #"sum"
0 0 23 3 2 #" ("
0 0 14 3 14 #"list-of-posn-y"
0 0 23 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 1 #"*"
0 0 23 3 2 #" ("
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 3 #") ("
0 0 14 3 3 #"sum"
0 0 23 3 2 #" ("
0 0 14 3 8 #"list-sqr"
0 0 23 3 2 #" ("
0 0 14 3 14 #"list-of-posn-x"
0 0 23 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 4 #"expt"
0 0 23 3 2 #" ("
0 0 14 3 3 #"sum"
0 0 23 3 2 #" ("
0 0 14 3 14 #"list-of-posn-x"
0 0 23 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 3 #")) "
0 0 20 3 1 #"2"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 41 #";; list-sqr: (listof num) -> (listof num)"
0 0 23 29 1 #"\n"
0 0 17 3 39 #";; squares every element in the dataset"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"list-sqr"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 3 #")) "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #" "
0 0 20 3 2 #"16"
0 0 23 3 1 #" "
0 0 20 3 2 #"25"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"list-sqr"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 1 #"6"
0 0 23 3 1 #" "
0 0 20 3 2 #"-7"
0 0 23 3 3 #")) "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 20 3 1 #"9"
0 0 23 3 1 #" "
0 0 20 3 2 #"16"
0 0 23 3 1 #" "
0 0 20 3 2 #"25"
0 0 23 3 1 #" "
0 0 20 3 2 #"36"
0 0 23 3 1 #" "
0 0 20 3 2 #"49"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 8 #"list-sqr"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 3 #"lst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 23 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 1 #"n"
0 0 23 3 3 #") ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 3 #")) "
0 0 14 3 3 #"lst"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 27 #";; sum: (listof num) -> num"
0 0 23 29 1 #"\n"
0 0 17 3 36 #";; sums every element in the dataset"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 3 #"sum"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 1 #"6"
0 0 23 3 3 #")) "
0 0 20 3 2 #"21"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 3 #"sum"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 1 #"6"
0 0 23 3 1 #" "
0 0 20 3 1 #"7"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 3 #")) "
0 0 20 3 2 #"55"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 3 #"sum"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 3 #"lst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 5 #"foldr"
0 0 23 3 1 #" "
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 28 #";; posn-product: posn -> num"
0 0 23 29 1 #"\n"
0 0 17 3 39 #";; finds the product of posn-x * posn-y"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"posn-product"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 3 #")) "
0 0 20 3 2 #"20"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"posn-product"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 2 #"52"
0 0 23 3 3 #")) "
0 0 20 3 3 #"156"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 12 #"posn-product"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 1 #"p"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 1 #"*"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 54 #";; list-of-posn-product: (listof posn) -> (listof num)"
0 0 23 29 1 #"\n"
0 0 17 3 61
#";; creates of a list where each element is the product of the"
0 0 23 29 1 #"\n"
0 0 17 3 41 #";; x and y values of a corresponding posn"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 20 #"list-of-posn-product"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 43 #"                                          ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 4 #"))) "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 20 #"list-of-posn-product"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 43 #"                                          ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"6"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 4 #"))) "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 20 3 2 #"90"
0 0 23 3 1 #" "
0 0 20 3 2 #"48"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 20 #"list-of-posn-product"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 3 #"lst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 23 3 1 #" "
0 0 14 3 12 #"posn-product"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 48 #";; list-of-posn-x: (listof posn) -> (listof num)"
0 0 23 29 1 #"\n"
0 0 17 3 56 #";; creates a list where each element is the posn-x value"
0 0 23 29 1 #"\n"
0 0 17 3 26 #";; of a corresponding posn"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 14 #"list-of-posn-x"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 37 #"                                    ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 4 #"))) "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 14 #"list-of-posn-x"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 3 #"958"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 37 #"                                    ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 3 #"1/3"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 4 #"))) "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 20 3 3 #"958"
0 0 23 3 1 #" "
0 0 20 3 3 #"1/3"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 14 #"list-of-posn-x"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 3 #"lst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 23 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 1 #"p"
0 0 23 3 3 #") ("
0 0 14 3 6 #"posn-x"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 3 #")) "
0 0 14 3 3 #"lst"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 48 #";; list-of-posn-y: (listof posn) -> (listof num)"
0 0 23 29 1 #"\n"
0 0 17 3 56 #";; creates a list where each element is the posn-y value"
0 0 23 29 1 #"\n"
0 0 17 3 26 #";; of a corresponding posn"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 14 #"list-of-posn-y"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 37 #"                                    ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 4 #"))) "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 14 #"list-of-posn-y"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 3 #"-90"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 37 #"                                    ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 6 #"1.2312"
0 0 23 3 4 #"))) "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 20 3 3 #"-90"
0 0 23 3 1 #" "
0 0 20 3 6 #"1.2312"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 14 #"list-of-posn-y"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 3 #"lst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 23 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 1 #"p"
0 0 23 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 3 #")) "
0 0 14 3 3 #"lst"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 77
(
 #";;------------------------------------------------------------------"
 #"---------"
) 0 0 23 29 1 #"\n"
0 0 17 3 77
(
 #";;----------------------------------lab4----------------------------"
 #"---------"
) 0 0 23 29 1 #"\n"
0 0 17 3 77
(
 #";;------------------------------------------------------------------"
 #"---------"
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 25 #";; axes: num num -> image"
0 0 23 29 1 #"\n"
0 0 17 3 63
#";; creates a basic plot of the first quadrant with x and y axes"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 23 3 2 #" ("
0 0 14 3 4 #"axes"
0 0 23 3 1 #" "
0 0 20 3 3 #"500"
0 0 23 3 1 #" "
0 0 20 3 3 #"500"
0 0 23 3 4 #"))  "
0 0 20 3 3 #"500"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 23 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 23 3 2 #" ("
0 0 14 3 4 #"axes"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 4 #"axes"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 2 #"or"
0 0 23 3 2 #" ("
0 0 14 3 1 #"<"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 3 #") ("
0 0 14 3 1 #"<"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 5 #"error"
0 0 23 3 1 #" "
0 0 19 3 61
#"\"X and Y axis must be longer than 3, else plot is too small.\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 13 #"overlay/align"
0 0 23 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 23 3 1 #" "
0 0 19 3 8 #"\"bottom\""
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 9 #"rectangle"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 23 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 9 #"rectangle"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 23 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 35 #";; plot-point : posn image -> image"
0 0 23 29 1 #"\n"
0 0 17 3 79
(
 #";; plots the points indicated by a posn to the plot given by the ima"
 #"ge argument"
) 0 0 23 29 1 #"\n"
0 0 17 3 17 #";; eyeball-tested"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"plot-point"
0 0 23 3 1 #" "
0 0 14 3 5 #"point"
0 0 23 3 1 #" "
0 0 14 3 4 #"plot"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 11 #"underlay/xy"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"   "
0 0 14 3 4 #"plot"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 6 #"posn-x"
0 0 23 3 1 #" "
0 0 14 3 5 #"point"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 20 3 3 #"500"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 23 3 1 #" "
0 0 14 3 5 #"point"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 6 #"circle"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 23 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"   "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 46 #";; plot-dataset : (listof posn) image -> image"
0 0 23 29 1 #"\n"
0 0 17 3 82
(
 #";; plots a list of posns taken as points onto the plot given by the "
 #"image argument"
) 0 0 23 29 1 #"\n"
0 0 17 3 17 #";; eyeball-tested"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"plot-dataset"
0 0 23 3 1 #" "
0 0 14 3 7 #"dataset"
0 0 23 3 1 #" "
0 0 14 3 4 #"plot"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 23 3 1 #" "
0 0 14 3 10 #"plot-point"
0 0 23 3 1 #" "
0 0 14 3 4 #"plot"
0 0 23 3 1 #" "
0 0 14 3 7 #"dataset"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 41 #";; build-plot : analysis dataset -> image"
0 0 23 29 1 #"\n"
0 0 17 3 60
#";; builds a plot with a linear regression line and a dataset"
0 0 23 29 1 #"\n"
0 0 17 3 74
(
 #";; and includes the equation of the linear regression line along wit"
 #"h the "
) 0 0 23 29 1 #"\n"
0 0 17 3 12 #";; R^2 value"
0 0 23 29 1 #"\n"
0 0 17 3 66
#";; no check-expects because they are unsuitable for in this case. "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"build-plot"
0 0 23 3 1 #" "
0 0 14 3 4 #"anal"
0 0 23 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 23 3 3 #" (("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 11 #"scaled-dset"
0 0 23 3 2 #" ("
0 0 14 3 13 #"scale-dataset"
0 0 23 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"plot"
0 0 23 3 2 #" ("
0 0 14 3 14 #"underlay/align"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 23 3 1 #" "
0 0 19 3 8 #"\"center\""
0 0 23 29 1 #"\n"
0 0 23 3 25 #"                        ("
0 0 14 3 4 #"axes"
0 0 23 3 1 #" "
0 0 20 3 3 #"500"
0 0 23 3 1 #" "
0 0 20 3 3 #"500"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 25 #"                        ("
0 0 14 3 16 #"equation-r2-text"
0 0 23 3 1 #" "
0 0 14 3 4 #"anal"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"start"
0 0 23 3 2 #" ("
0 0 14 3 10 #"point-calc"
0 0 23 3 2 #" ("
0 0 14 3 11 #"full-linreg"
0 0 23 3 1 #" "
0 0 14 3 11 #"scaled-dset"
0 0 23 3 2 #") "
0 0 20 3 1 #"0"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 3 #"end"
0 0 23 3 2 #" ("
0 0 14 3 10 #"point-calc"
0 0 23 3 2 #" ("
0 0 14 3 11 #"full-linreg"
0 0 23 3 1 #" "
0 0 14 3 11 #"scaled-dset"
0 0 23 3 2 #") "
0 0 20 3 3 #"500"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 10 #"scene+line"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 12 #"plot-dataset"
0 0 23 3 1 #" "
0 0 14 3 11 #"scaled-dset"
0 0 23 3 1 #" "
0 0 14 3 4 #"plot"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 6 #"posn-x"
0 0 23 3 1 #" "
0 0 14 3 5 #"start"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 20 3 3 #"500"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 23 3 1 #" "
0 0 14 3 5 #"start"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 6 #"posn-x"
0 0 23 3 1 #" "
0 0 14 3 3 #"end"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 20 3 3 #"500"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 23 3 1 #" "
0 0 14 3 3 #"end"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"     "
0 0 19 3 8 #"\"maroon\""
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 38 #";; equation-r2-text: analysis -> image"
0 0 23 29 1 #"\n"
0 0 17 3 59
#";; formats the linear regression equation and the r^2 value"
0 0 23 29 1 #"\n"
0 0 17 3 25 #";; for display on graph. "
0 0 23 29 1 #"\n"
0 0 17 3 34 #";; not suitable for check expect. "
0 0 23 29 1 #"\n"
0 0 17 3 18 #";; eyeball-tested."
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 16 #"equation-r2-text"
0 0 23 3 1 #" "
0 0 14 3 4 #"anal"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 5 #"above"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 4 #"text"
0 0 23 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 23 3 1 #" "
0 0 19 3 6 #"\"y = \""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 20 #"real->decimal-string"
0 0 23 3 2 #" ("
0 0 14 3 7 #"lineq-m"
0 0 23 3 2 #" ("
0 0 14 3 14 #"analysis-lineq"
0 0 23 3 1 #" "
0 0 14 3 4 #"anal"
0 0 23 3 3 #")) "
0 0 20 3 1 #"3"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                             "
0 0 19 3 6 #"\"x + \""
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 20 #"real->decimal-string"
0 0 23 3 2 #" ("
0 0 14 3 7 #"lineq-b"
0 0 23 3 2 #" ("
0 0 14 3 14 #"analysis-lineq"
0 0 23 3 1 #" "
0 0 14 3 4 #"anal"
0 0 23 3 3 #")) "
0 0 20 3 1 #"3"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                             "
0 0 20 3 2 #"20"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                             "
0 0 19 3 8 #"\"maroon\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 4 #"text"
0 0 23 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 23 3 1 #" "
0 0 19 3 8 #"\"R^2 = \""
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 20 #"real->decimal-string"
0 0 23 3 2 #" ("
0 0 14 3 11 #"analysis-r2"
0 0 23 3 1 #" "
0 0 14 3 4 #"anal"
0 0 23 3 2 #") "
0 0 20 3 1 #"3"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                             "
0 0 20 3 2 #"20"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                             "
0 0 19 3 8 #"\"maroon\""
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 42 #";; real->decimal-string: num num -> string"
0 0 23 29 1 #"\n"
0 0 17 3 75
(
 #";; converts a real number to a string with a given number of decimal"
 #" places"
) 0 0 23 29 1 #"\n"
0 0 17 3 84
(
 #";; but only if the real number has at least that many decimal places"
 #" to start with. "
) 0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 20 #"real->decimal-string"
0 0 23 3 1 #" "
0 0 20 3 6 #"1.1234"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #") "
0 0 19 3 7 #"\"1.123\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 20 #"real->decimal-string"
0 0 23 3 1 #" "
0 0 20 3 3 #"1.1"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #") "
0 0 19 3 5 #"\"1.1\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 20 #"real->decimal-string"
0 0 23 3 1 #" "
0 0 14 3 4 #"real"
0 0 23 3 1 #" "
0 0 14 3 3 #"dec"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 14 #"number->string"
0 0 23 3 2 #" ("
0 0 14 3 14 #"exact->inexact"
0 0 23 3 2 #" ("
0 0 14 3 1 #"/"
0 0 23 3 2 #" ("
0 0 14 3 5 #"floor"
0 0 23 3 2 #" ("
0 0 14 3 1 #"*"
0 0 23 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 14 3 3 #"dec"
0 0 23 3 2 #") "
0 0 14 3 4 #"real"
0 0 23 3 4 #")) ("
0 0 14 3 4 #"expt"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 14 3 3 #"dec"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";; max-list : lst -> num"
0 0 23 29 1 #"\n"
0 0 17 3 39 #";; returns the largest number in a list"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"max-list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 2 #"( "
0 0 20 3 4 #"1000"
0 0 23 3 1 #" "
0 0 20 3 3 #"224"
0 0 23 3 1 #" "
0 0 20 3 4 #"1243"
0 0 23 3 1 #" "
0 0 20 3 4 #"1244"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 4 #"1246"
0 0 23 3 1 #" "
0 0 20 3 1 #"7"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #" "
0 0 20 3 6 #"100000"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 3 #")) "
0 0 20 3 6 #"100000"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 23 3 2 #" ("
0 0 14 3 8 #"max-list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 4 #"()))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"max-list"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 3 #") ("
0 0 14 3 5 #"error"
0 0 23 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"empty"
0 0 19 3 1 #" "
0 0 19 3 5 #"lists"
0 0 19 3 1 #" "
0 0 19 3 4 #"have"
0 0 19 3 1 #" "
0 0 19 3 2 #"no"
0 0 19 3 1 #" "
0 0 19 3 8 #"elements"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 28 #" them, thus no max elements\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 23 3 3 #" (("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 9 #"first-num"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 5 #"foldl"
0 0 23 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 23 3 2 #" ("
0 0 14 3 2 #"n1"
0 0 23 3 1 #" "
0 0 14 3 2 #"n2"
0 0 23 3 3 #") ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 1 #">"
0 0 23 3 1 #" "
0 0 14 3 2 #"n1"
0 0 23 3 1 #" "
0 0 14 3 2 #"n2"
0 0 23 3 2 #") "
0 0 14 3 2 #"n1"
0 0 23 3 1 #" "
0 0 14 3 2 #"n2"
0 0 23 3 3 #")) "
0 0 14 3 9 #"first-num"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 35 #";; linreg-calc: analysis num -> num"
0 0 23 29 1 #"\n"
0 0 17 3 76
(
 #";; using the linear regression equation, calculates a y value for a "
 #"given x."
) 0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"linreg-calc"
0 0 23 3 2 #" ("
0 0 14 3 13 #"make-analysis"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-lineq"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 2 #") "
0 0 20 3 2 #"10"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"linreg-calc"
0 0 23 3 2 #" ("
0 0 14 3 13 #"make-analysis"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-lineq"
0 0 23 3 1 #" "
0 0 20 3 2 #"-2"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 2 #") "
0 0 20 3 2 #"10"
0 0 23 3 2 #") "
0 0 20 3 3 #"-15"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"linreg-calc"
0 0 23 3 1 #" "
0 0 14 3 4 #"anal"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 23 3 3 #" (("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"slope"
0 0 23 3 2 #" ("
0 0 14 3 7 #"lineq-m"
0 0 23 3 2 #" ("
0 0 14 3 14 #"analysis-lineq"
0 0 23 3 1 #" "
0 0 14 3 4 #"anal"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 9 #"intercept"
0 0 23 3 2 #" ("
0 0 14 3 7 #"lineq-b"
0 0 23 3 2 #" ("
0 0 14 3 14 #"analysis-lineq"
0 0 23 3 1 #" "
0 0 14 3 4 #"anal"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 9 #"intercept"
0 0 23 3 2 #" ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 14 3 5 #"slope"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 36 #";; point-calc : analysis num -> posn"
0 0 23 29 1 #"\n"
0 0 17 3 84
(
 #";; creates a point represented by a posn by applying the linear regr"
 #"ession equation "
) 0 0 23 29 1 #"\n"
0 0 17 3 16 #";; on a given x."
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"point-calc"
0 0 23 3 2 #" ("
0 0 14 3 13 #"make-analysis"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-lineq"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 2 #") "
0 0 20 3 2 #"10"
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 20 3 3 #"100"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"point-calc"
0 0 23 3 2 #" ("
0 0 14 3 13 #"make-analysis"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-lineq"
0 0 23 3 1 #" "
0 0 20 3 2 #"-2"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 2 #") "
0 0 20 3 2 #"10"
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 20 3 3 #"-15"
0 0 23 3 5 #"))   "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"point-calc"
0 0 23 3 1 #" "
0 0 14 3 4 #"anal"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #" ("
0 0 14 3 11 #"linreg-calc"
0 0 23 3 1 #" "
0 0 14 3 4 #"anal"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 36 #";; scale-dataset: dataset -> dataset"
0 0 23 29 1 #"\n"
0 0 17 3 66
#";; scales all values in a given dataset by a constant scale factor"
0 0 23 29 1 #"\n"
0 0 17 3 71
(
 #";; such that the max value of either the list of x or list of y is 5"
 #"00."
) 0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 13 #"scale-dataset"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 36 #"                                   ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 36 #"                                   ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 3 #"100"
0 0 23 3 1 #" "
0 0 20 3 3 #"100"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 3 #"500"
0 0 23 3 1 #" "
0 0 20 3 3 #"500"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 23 3 2 #" ("
0 0 14 3 13 #"scale-dataset"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 4 #"()))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"scale-dataset"
0 0 23 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 3 #") ("
0 0 14 3 5 #"error"
0 0 23 3 1 #" "
0 0 19 3 39 #"\"meaningless to scale an empty dataset\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 23 3 3 #" (("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"max-x"
0 0 23 3 2 #" ("
0 0 14 3 8 #"max-list"
0 0 23 3 2 #" ("
0 0 14 3 14 #"list-of-posn-x"
0 0 23 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"max-y"
0 0 23 3 2 #" ("
0 0 14 3 8 #"max-list"
0 0 23 3 2 #" ("
0 0 14 3 14 #"list-of-posn-y"
0 0 23 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 14 #"scale-factor-x"
0 0 23 3 2 #" ("
0 0 14 3 1 #"/"
0 0 23 3 1 #" "
0 0 20 3 3 #"500"
0 0 23 3 1 #" "
0 0 14 3 5 #"max-x"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 14 #"scale-factor-y"
0 0 23 3 2 #" ("
0 0 14 3 1 #"/"
0 0 23 3 1 #" "
0 0 20 3 3 #"500"
0 0 23 3 1 #" "
0 0 14 3 5 #"max-y"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 12 #"scale-factor"
0 0 23 3 2 #" ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 1 #">"
0 0 23 3 1 #" "
0 0 14 3 14 #"scale-factor-x"
0 0 23 3 1 #" "
0 0 14 3 14 #"scale-factor-y"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                   "
0 0 14 3 14 #"scale-factor-y"
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                   "
0 0 14 3 14 #"scale-factor-x"
0 0 23 3 7 #")))    "
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 23 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 23 3 2 #" ("
0 0 14 3 1 #"p"
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 23 3 2 #" ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 14 3 12 #"scale-factor"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 33 #"                                ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 14 3 12 #"scale-factor"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"         "
0 0 14 3 4 #"dset"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 46 #";; dataset-from-file : string -> (listof posn)"
0 0 23 29 1 #"\n"
0 0 17 3 41 #";; builds a list of posns from a csv file"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 17 #"dataset-from-file"
0 0 23 3 1 #" "
0 0 19 3 12 #"\"discus.csv\""
0 0 23 3 3 #") ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 6          10 57 14 #"1802003/50000\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 6          10 57 13 #"392811/10000\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 1 #" "
0 6          10 57 10 #"20447/500\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"12"
0 0 23 3 1 #" "
0 6          10 57 10 #"11303/250\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 6          10 57 13 #"893699/20000\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"24"
0 0 23 3 1 #" "
0 6          10 57 14 #"1846199/40000\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"28"
0 0 23 3 1 #" "
0 6          10 57 12 #"236601/5000\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"32"
0 0 23 3 1 #" "
0 6          10 57 14 #"1980057/40000\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"36"
0 0 23 3 1 #" "
0 6          10 57 14 #"2019173/40000\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"48"
0 0 23 3 1 #" "
0 6          10 57 12 #"131953/2500\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"52"
0 0 23 3 1 #" "
0 6          10 57 15 #"5503799/100000\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"56"
0 0 23 3 1 #" "
0 6          10 57 13 #"563499/10000\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 1 #" "
0 6          10 57 10 #"29591/500\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"64"
0 0 23 3 1 #" "
0 6          10 57 13 #"609981/10000\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"68"
0 0 23 3 1 #" "
0 6          10 57 13 #"647827/10000\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"72"
0 0 23 3 1 #" "
0 6          10 57 11 #"64389/1000\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"76"
0 0 23 3 1 #" "
0 6          10 57 14 #"1687449/25000\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"80"
0 0 23 3 1 #" "
0 6          10 57 10 #"41656/625\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"84"
0 0 23 3 1 #" "
0 6          10 57 12 #"166497/2500\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"88"
0 0 23 3 1 #" "
0 6          10 57 14 #"1376299/20000\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"92"
0 0 23 3 1 #" "
0 6          10 57 12 #"260477/4000\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 17 #"dataset-from-file"
0 0 23 3 1 #" "
0 0 14 3 4 #"file"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 23 3 4 #" ( ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 2 #" ("
0 0 14 3 13 #"read-csv-file"
0 0 23 3 1 #" "
0 0 14 3 4 #"file"
0 0 23 3 4 #")) )"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 23 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 23 3 2 #" ("
0 0 14 3 4 #"pair"
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 23 3 2 #" ("
0 0 14 3 14 #"string->number"
0 0 23 3 1 #"("
0 0 14 3 3 #"car"
0 0 23 3 1 #" "
0 0 14 3 4 #"pair"
0 0 23 3 4 #")) ("
0 0 14 3 14 #"string->number"
0 0 23 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 23 3 1 #" "
0 0 14 3 4 #"pair"
0 0 23 3 5 #")))) "
0 0 14 3 3 #"lst"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 31 #";; main : string string -> bool"
0 0 23 29 1 #"\n"
0 0 17 3 75
(
 #";; plots a linear regression analysis on a dataset and saves it as a"
 #"n image"
) 0 0 23 29 1 #"\n"
0 0 17 3 40 #";; main not suitable for check-expects. "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 4 #"main"
0 0 23 3 1 #" "
0 0 14 3 5 #"input"
0 0 23 3 1 #" "
0 0 14 3 6 #"output"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 23 3 3 #" (("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 2 #" ("
0 0 14 3 17 #"dataset-from-file"
0 0 23 3 1 #" "
0 0 14 3 5 #"input"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 10 #"save-image"
0 0 23 3 2 #" ("
0 0 14 3 4 #"crop"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 3 #"500"
0 0 23 3 1 #" "
0 0 20 3 3 #"500"
0 0 23 3 1 #"("
0 0 14 3 10 #"build-plot"
0 0 23 3 2 #" ("
0 0 14 3 11 #"full-linreg"
0 0 23 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 2 #") "
0 0 14 3 4 #"dset"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 14 3 6 #"output"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0           0
